# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

stages:
- stage: Stage1
  displayName: Build app
  jobs:
  - job: BuildApp
    displayName: Build app with Gradle
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'assembleMockDebugAndroidTest'
    - task: CopyFiles@2
      displayName: 'Copy .apk files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        contents: '**/*.apk'
        targetFolder: '$(build.artifactStagingDirectory)'
        flattenFolders: true
    - task: PublishBuildArtifacts@1
      displayName: 'Archive .apk files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: apk
- stage: Stage2
  displayName: Start emulator
  jobs:
  - job: StartEmulator
    steps:
      - task: Bash@3
        inputs:
          displayName: 'Start emulator'
          targetType: 'inline'
          script: sh ./emulator.sh
- stage: Stage3
  displayName: Run tests
  jobs:
  - job: RunTests
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: '-Pandroid.testInstrumentationRunnerArguments.class=com.example.android.architecture.blueprints.todoapp.test.chapter11.tests.AddToDoTest connectedMockDebugAndroidTest'
    - script: mkdir $(Build.ArtifactStagingDirectory)/testResults
      condition: always()      
    - task: ArchiveFiles@2
      condition: always()
      inputs:
        rootFolderOrFile: '$(Build.Repository.LocalPath)/app/build/reports/androidTests/connected/flavors/MOCK/'
        includeRootFolder: false 
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/testResults/$(Build.BuildId).zip' 
          eplaceExistingArchive: true 
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/testResults'
        artifactName: test